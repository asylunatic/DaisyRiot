//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z12intersectioni
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 8 .b8 $str[5] = {72, 105, 116, 33, 0};

.visible .entry _Z12intersectioni(
	.param .u32 _Z12intersectioni_param_0
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<4>;


	ld.global.f32 	%f1, [ray];
	mov.f32 	%f2, 0f00000000;
	sub.f32 	%f3, %f2, %f1;
	ld.global.f32 	%f4, [ray+4];
	sub.f32 	%f5, %f2, %f4;
	ld.global.f32 	%f6, [ray+8];
	sub.f32 	%f7, %f2, %f6;
	mul.f32 	%f8, %f5, 0f00000000;
	fma.rn.f32 	%f9, %f3, 0f00000000, %f8;
	add.f32 	%f10, %f7, %f9;
	ld.global.f32 	%f11, [ray+12];
	ld.global.f32 	%f12, [ray+16];
	mul.f32 	%f13, %f12, 0f00000000;
	fma.rn.f32 	%f14, %f11, 0f00000000, %f13;
	ld.global.f32 	%f15, [ray+20];
	add.f32 	%f16, %f15, %f14;
	div.rn.f32 	%f17, %f10, %f16;
	fma.rn.f32 	%f18, %f17, %f11, %f1;
	fma.rn.f32 	%f19, %f17, %f12, %f4;
	fma.rn.f32 	%f20, %f17, %f15, %f6;
	setp.le.f32	%p1, %f18, 0f3F800000;
	setp.ge.f32	%p2, %f18, 0f00000000;
	and.pred  	%p3, %p2, %p1;
	setp.ge.f32	%p4, %f19, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.le.f32	%p6, %f19, 0f3F800000;
	and.pred  	%p7, %p5, %p6;
	setp.ge.f32	%p8, %f20, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	setp.le.f32	%p10, %f20, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@!%p11 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r1), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p12, %r1, 0;
	@%p12 bra 	BB0_3;

	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 0

BB0_3:
	ret;
}

	// .globl	_Z11boundingboxiPf
.visible .entry _Z11boundingboxiPf(
	.param .u32 _Z11boundingboxiPf_param_0,
	.param .u64 _Z11boundingboxiPf_param_1
)
{
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_Z11boundingboxiPf_param_1];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	st.global.u32 	[%rd2+4], %rd3;
	st.global.u32 	[%rd2], %rd3;
	mov.u64 	%rd4, 1065353216;
	st.global.u32 	[%rd2+12], %rd4;
	st.global.u32 	[%rd2+8], %rd3;
	st.global.u32 	[%rd2+20], %rd3;
	st.global.u32 	[%rd2+16], %rd4;
	ret;
}


